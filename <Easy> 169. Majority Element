/*
https://leetcode.com/problems/majority-element/
169. Majority Element

Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2
*/

class Solution {
    public int majorityElement(int[] nums) {
        //method 1-sorting
        // Arrays.sort(nums);
        // return nums[nums.length/2];
        
        //method 2-hashmap
        HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>();
        int ans = 0;
        for (int i :nums){
            if(!hm.containsKey(i)){
                hm.put(i,1);
            }else{
                hm.put(i,hm.get(i)+1);
            }
            
            if(hm.get(i)>nums.length/2){
                ans = i;
                return ans;
            }
        }
        return ans;
    }
}
