/*
https://leetcode.com/problems/valid-palindrome/
125. Valid Palindrome

Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
*/

class Solution {
    public boolean isPalindrome(String s) {
        if(s.length()<=1) return true;
        s= s.toUpperCase();
        s=s.replace(" ","");
   
        int head = 0;
        int tail = s.length()-1;
        
        while(head<tail){
            while(head<tail && String.valueOf(s.charAt(head)).matches("\\W")){
                head ++;
            }
            while(head<tail && String.valueOf(s.charAt(tail)).matches("\\W")){
                tail --;
            }
            
            if(!(s.charAt(head)==s.charAt(tail))){
                return false;
            }
            head ++;
            tail --;
        }
        return true;
        
    }
}
